@import "core/typography.scss";
@import "core/utility.scss";
@import "core/scaffold.scss";

@property --sketchy-arrow-width {
  syntax: "<length>";
  initial-value: 1px;
  inherits: true;
}
@property --sketchy-arrow-tip-spread {
  syntax: "<angle>";
  initial-value: 45deg;
  inherits: true;
}
@property --sketchy-arrow-tip-size {
  syntax: "<number>";
  initial-value: 40;
  inherits: true;
}
@property --sketchy-arrow-point-approx {
  syntax: "<number>";
  initial-value: 3;
  inherits: true;
}
@property --sketchy-arrow-count {
  syntax: "<integer>";
  initial-value: 3;
  inherits: true;
}
@property --sketchy-arrow-color {
  syntax: "<color>";
  initial-value: black;
  inherits: true;
}
@property --sketchy-arrow-random-seed {
  syntax: "<integer>";
  initial-value: 1234;
  inherits: true;
}

:root {
  font-family: Raleway, system-ui, sans-serif;
  --slide-bg: white;
  --sliding-duration: 0ms;
  --fragment-duration: 100ms;
  --brand-color: #f60;
  --sketchy-arrow-width: 0.1em;
  --sketchy-arrow-tip-size: 20;
}

.our-header {
  border-left: var(--brand-color) solid 0.15em;
  padding: 0.5em;
  margin: 0 0 0.5em;
}

.columns {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(5em, 1fr));
  grid-gap: 1em;
  align-items: center;
}

.cover {
  --slide-bg: var(--brand-color);
  background: var(--slide-bg) no-repeat center/133vmin
    url("../img/logo-antreem-contour.svg");
  color: white;
  text-align: center;

  small {
    display: block;
  }

  .uff-logo {
    height: 2em;
    display: block;
  }

  .logo {
    background: white;
    padding: 0.2em;
    border-radius: 0.5em;
    height: 5em;
  }

  &-devcast {
    --slide-bg: #057f36;
    color: white;
    text-align: center;

    img {
      z-index: -1;
    }

    h3 {
      font-weight: normal;
      font-style: italic;
      margin-block-end: 0.5em;
    }
    h4 {
      margin: 0;
    }
    small {
      font-weight: normal;
      display: block;
    }
    a {
      color: inherit;
    }
  }
}

.links {
  font-size: 70%;
  align-self: center;
  columns: 2;
  margin-top: 0.5em;

  li:not(:first-child) {
    margin-top: inherit;
  }
  a {
    display: block;
    width: fit-content;
    padding-left: 1.75em;
  }
}

.antreem-logo {
  position: absolute;
  height: 12em;
  right: 0;
  bottom: -4em;
}
.my-data {
  > h2 {
    margin-bottom: 0;
  }
  a {
    color: var(--brand-color);
  }
}
.my-face {
  border: 0.1em solid var(--brand-color);
  border-radius: 50%;
  height: 6em;
  float: left;
  margin: 0 1em;
}
.my-info {
  width: 8em;
  text-align: center;
  margin: 2em 2em 0;
  img {
    height: 1em;
    vertical-align: middle;
  }
}
.final-link {
  a {
    color: var(--brand-color);
  }
  img {
    display: block;
    margin: 1em auto 0;
    height: 7em;
  }
}

.shadow {
  box-shadow: 0 0 0.5em rgba(black, 0.5);
}

.slide-teal {
  --slide-bg: teal;
}

.jsdoc {
  position: absolute;
  color: white;
  top: 7em;
  left: 15em;
  white-space: nowrap;
  font-weight: bold;
  transform: rotate(30deg);

  img {
    height: 1.5em;
    vertical-align: -0.15em;
  }
}
.tslogo {
  position: absolute;
  top: 0.5em;
  left: 10em;

  img {
    height: 1.5em;
    background-color: white;
    transform: rotate(15deg);
  }
}

.threedi-spin {
  animation: threedi-spin linear 2s infinite alternate;
  display: inline-block;
}

.sketchy-arrow {
  position: absolute;
  background: paint(sketchy-arrow);
  aspect-ratio: 16 / 9;
  animation: sketchy 0.3s steps(3) infinite;
  filter: drop-shadow(0.075em 0.075em 0 white);
}

.poppin {
  animation: poppin 1s infinite;
  transform-origin: 0 100%;
  font-size: 300%;
}
.poppin::before {
  content: "ðŸŽ‰";
}

@keyframes threedi-spin {
  from {
    transform: scale(1, 1) rotate3d(1, 0, 0, 0) rotate3d(0, 1, 0, 0)
      rotate3d(0, 0, 1, 0);
  }
  to {
    transform: scale(1.5, -1.5) rotate3d(1, 0, 0, 30deg)
      rotate3d(0, 1, 0, 45deg) rotate3d(0, 0, 1, 90deg);
  }
}

@keyframes sketchy {
  from {
    --sketchy-arrow-random-seed: 20;
  }
  to {
    --sketchy-arrow-random-seed: 40;
  }
}

@keyframes poppin {
  0%,
  100% {
    transform: rotate(-45deg) scaleX(1) rotate(45deg);
  }
  50% {
    transform: rotate(-45deg) scaleX(0.75) rotate(45deg);
  }
  60% {
    transform: rotate(-45deg) scaleX(1.25) rotate(45deg);
  }
}
